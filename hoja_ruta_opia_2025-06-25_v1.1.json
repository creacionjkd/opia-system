{
    "version": "Hoja de Ruta Maestra Intensiva v1.1",
    "fecha_actualizacion": "2025-06-25",
    "justificacion_cambio": "Se incorporan capacidades y requisitos de MiniMax M1 (contexto 1 M tokens), Kimi‑Dev‑72B (cirujano de código RLHF) y Seedance 1.0 (narrativa multi‑plano).",
    "pilares_doctrina": {
        "Comandante_Optimizado": "Usuario opera en modo estratégico con feedback contínuo; delega tareas de programación a LLMs especialistas.",
        "Forja_Agentica": "Protocolo PAE + manifiestos JSON; ahora incluye validación formal con suites de pruebas y RLHF donde aplique.",
        "Orquestacion_Jerarquica": "Orquestador central (FastAPI) distribuye tareas a estrategas PLANNER (MiniMax M1), ejecutores ENGINEER (Kimi‑Dev‑72B) y creadores MEDIA (Seedance 1.0)."
    },
    "misiones_inmediatas": [
        {
            "id": "Mision_1.2",
            "descripcion": "Forjar agente_base.py + test_agente_base.py con Kimi‑Dev‑72B",
            "estado": "Pendiente"
        },
        {
            "id": "Endpoint_POST_lanzar_mision",
            "descripcion": "Construir endpoint FastAPI con validación manifiestos + autenticación",
            "estado": "Pendiente"
        },
        {
            "id": "Manifiesto_Base_JSON",
            "descripcion": "Definir plantilla universal con schema Pydantic + campos RLHF_metadata",
            "estado": "Pendiente"
        },
        {
            "id": "Sistema_Logs_Estados",
            "descripcion": "Automatizar generación de estado_opia_<fecha>.json + métricas costo/latencia",
            "estado": "Pendiente"
        },
        {
            "id": "Integracion_MiniMax_Planner",
            "descripcion": "Añadir agente estratega basado en MiniMax M1 para descomposición de tareas >10k tokens",
            "estado": "Pendiente"
        },
        {
            "id": "Pipeline_LLMOps",
            "descripcion": "Configurar MLflow/WandB + OpenTelemetry para monitorizar prompts, tokens, coste",
            "estado": "Pendiente"
        },
        {
            "id": "Modulo_Media_Seedance",
            "descripcion": "Diseñar manifiesto y adaptador para Seedance 1.0 (API async) en fase demo de clientes",
            "estado": "Planificado"
        }
    ],
    "calendario_intensivo": {
        "duracion_semanas": 14,
        "horas_semanales": 30,
        "fases": [
            "Orientación & Setup",
            "Git & CI",
            "Python Lectura + Tests",
            "DDD + Hexagonal",
            "FastAPI & Docker",
            "Manifiestos JSON",
            "Forja agente_base",
            "API lanzar_mision",
            "Sistema Logs/Estados",
            "n8n + Integraciones",
            "Orquestador Multi‑Agente (MiniMax planner + Kimi executor)",
            "LLMOps Observabilidad & RLHF harness",
            "Modulo Seedance Media",
            "Kit Comercial & Piloto"
        ]
    },
    "indicadores_exito": {
        "agent_base_test_verde": false,
        "api_heartbeat_publica": false,
        "planner_executor_loop_ok": false,
        "video_seedance_demo": false,
        "primer_cliente_piloto": false
    },
    "observaciones": "Versión 1.1 añade integración con modelos 2025 de vanguardia y capa LLMOps."
}